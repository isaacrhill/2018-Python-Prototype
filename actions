from wallaby import *
import constants as c
import movement as m
import linefollow as f

def EvanIsaac():
    f.drive_until_line(10)
    m.drive(1500)
    m.turn_right()
    f.lfollow_right_bstop(100)
    m.drive(500)
    m.turn_left()
    f.both_lfollow(5)

def calib():
    m.drive()
    msleep(500)
    m.backwards()
    msleep(500)
    m.turn_left()
    msleep(500)
    m.turn_right()
    msleep(500) 


def check_parking():
    m.turn_right(390)
    msleep(1000)
    m.drive(300)
    msleep(1000)
    print"Check right parking depth: %d"%analog(c.depth_sensor)
    if analog(c.depth_sensor)>c.depth_far:
        m.backwards(300)    
        m.turn_left(500)
        second_parking()
    else:
        m.drive(1000)
        print "Parked in spot 1"
            
def second_parking():
    msleep(1000)
    print"Check left parking depth: %d"%analog(c.depth_sensor)
    if analog(c.depth_sensor)>c.depth_far:
        m.backwards(1000)    
        m.turn_left(600)
        f.b_line_follow_left(120)
    else:
        m.drive(1000)
        print "Part in spot 2"
                  
def drive_square():
    print "Starting drive_square"
    m.drive()
    print "First drive done"
    msleep(1000)
    print "Wait"
    m.turn_right() #turn right
    msleep(1000)
    print "Wait"
    m.drive()
    msleep(1000)
    print "Wait"
    print "Second drive done"
    m.turn_right()
    msleep(1000)
    print "Wait"
    m.drive()
    msleep(1000)
    print "Wait"
    print "Third drive done"
    m.turn_right()
    msleep(1000)
    print "Wait"
    m.drive()
    msleep(1000)
    print "Wait"
    print "Fourth drive done"   
